№Задача 1:

2+2

-----------------------

4


№Задача 2:

print('Hello world')

-----------------------

Hello world


№Задача 3

a = 3
print(type(a))
a = 3.5
print(type(a))
a= 'qwerty'
print(type(a))
a = True
print(type(a))
a = '123'
print(type(a))

-----------------------

<class 'int'>
<class 'float'>
<class 'str'>
<class 'bool'>
<class 'str'>

№Задача 4:

A)a = 5.7
print (int(a))

Б)a = -5.7
print (int(a))

В)print (3**39 - int (float(3**39)))

-----------------------

А)5
Б)-5
В)11

№Задача 5:

print ('Hello', input())

-----------------------

Hello Александер

№Задача 6:

print ((int(input())*60+int(input()))*2)

-----------------------

1
20
160

№Задача 7:

a = False
b = True
c = False

1)print (not a or b and c)

2)print ((not a or b) and c)

-----------------------

1)True
2)False

№Задача 8:

year = int(input())
if (year <= 1900 or year >= 3000):
    print ('God ne vhodit v vbIBorky')
elif (year%4==0 and year%100!=0) or year%400==0:
    print ('Happy birthday')
else:
    print ('God oBbIchnbIy')

-----------------------

2000 -> Happy birthday
1900 -> God ne vhodit v vbIBorky
3000 -> God ne vhodit v vbIBorky
2022 -> God oBbIchnbIy

№Задача 10:

a = int(input())
sum = 0
while a != 0:
    sum += a
    a = int(input())
print(sum)

-----------------------

1
2
3
4
5
0
15

№Задача 11:

x, y = int(input()), int(input())
min = x*y
for i in range(x*y, 0, -1):
    if i % x == 0 and i % y == 0:
        min = i
print(min)

-----------------------

6
8
24

№Задача 12:

for i in range(0, 20, 1):
    if i % 2 == 0:
        print(i, end=" ")

-----------------------

0 2 4 6 8 10 12 14 16 18

№Задача 14:

n = int(input())  # размер матрицы
# создание матрицы нужного размера, заполнена 0
a = [[0] * n for i in range(n)]
count = 0  # количество заполненных ячеек
for i in range(n):   # заполнение 1 строки
    count += 1
    a[0][i] = count
j = 0   # указываем последнюю заполненную ячейку
i = n-1
n -= 1  # устанавливаем размер 1 блока 1 витка
while len(a)**2 != count:  # условие выхода из цикла
    for k in range(n):  # движение вниз
        j += 1
        count += 1
        a[j][i] = count  # заполнение матрицы
    for k in range(n):  # движение влево
        i -= 1
        count += 1
        a[j][i] = count
    for k in range(n-1):  # движение вверх
        j -= 1
        count += 1
        a[j][i] = count
    for k in range(n-1):  # движение вправо
        i += 1
        count += 1
        a[j][i] = count
    n -= 2    # обеспечиваем переход на внутренний виток
for i in range(len(a)):  # вывод полученной матрицы
    for j in range(len(a[i])):
        print(a[i][j], end=' ')
    print()

-----------------------

1 2 3 4 5 
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9

№Задача 15:

import time
from tkinter import messagebox
if __name__ == '__main__':
    messagebox.showinfo(
        'Useful Python', 'Вы долго смотрели в монитор, теперь посмотрите в окно.')
    time.sleep(10)
    messagebox.showinfo(
        'Useful Python', 'Вы долго смотрели в монитор, теперь посмотрите в окно.')

-----------------------

№Задача 16:

from tkinter import *
from tkinter import messagebox
# функция обработки нажатия
def clicked_btn1():
    messagebox.showinfo(
        'Useful Python', 'Вы долго смотрели в монитор, теперь посмотрите в окно.')
def clicked_btn2():
    quit()
window = Tk()  # создание окна
window.title('Окна и кнопки')  # заголовок окна
window.geometry('400x250')  # размеры окна
lbl = Label(window, text='Кнопки:', font=('Arial Bold', 30))
lbl.grid(column=0, row=0)
# вызов функции clicked() при нажатии кнопки
btn1 = Button(window, text='Уведомление', command=clicked_btn1)
btn2 = Button(window, text='KILL', command=clicked_btn2)
btn1.grid(column=1, row=0)
btn2.grid(column=2, row=0)
window.mainloop()  # бесконечный цикл окна, окно ждёт нажатий
